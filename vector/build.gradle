apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

if (project.hasProperty("coverage")) {
    apply plugin: 'jacoco'
}

kapt {
    correctErrorTypes = true
}

static def gitRevision() {
    def cmd = "git rev-parse --short=8 HEAD"
    return cmd.execute().text.trim()
}

project.android.buildTypes.all { buildType ->
    buildType.javaCompileOptions.annotationProcessorOptions.arguments =
            [
                    validateEpoxyModelUsage: String.valueOf(buildType.name == 'debug')
            ]
}

android {
    // Due to a bug introduced in Android gradle plugin 3.6.0, we have to specify the ndk version to use
    // Ref: https://issuetracker.google.com/issues/144111441
    ndkVersion "21.3.6528147"

    compileSdk versions.compileSdk

    defaultConfig {
        // Set to API 21: see #405
        minSdk versions.minSdk
        targetSdk versions.targetSdk

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Keep abiFilter for the universalApk
        ndk {
            abiFilters "armeabi-v7a", "x86", 'arm64-v8a', 'x86_64'
        }

        // Generate a random app task affinity
        manifestPlaceholders = [appTaskAffinitySuffix: "H_${gitRevision()}"]

        // The following argument makes the Android Test Orchestrator run its
        // "pm clear" command after each test invocation. This command ensures
        // that the app's state is completely cleared between tests.
        testInstrumentationRunnerArguments clearPackageData: 'true'
    }

    testOptions {
        // Disables animations during instrumented tests you run from the command line…
        // This property does not affect tests that you run using Android Studio.”
        animationsDisabled = true

        // Comment to run on Android 12
//        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
    buildTypes {
        debug {
            if (project.hasProperty("coverage")) {
                testCoverageEnabled = coverage.enableTestCoverage
            }
        }
        nightly {
            initWith release
            matchingFallbacks = ['release']
        }
        release
    }

    flavorDimensions "store"

    productFlavors {
        gplay {
            dimension "store"
            isDefault = true

            buildConfigField "String", "SHORT_FLAVOR_DESCRIPTION", "\"G\""
            buildConfigField "String", "FLAVOR_DESCRIPTION", "\"GooglePlay\""
        }

        fdroid {
            dimension "store"

            buildConfigField "String", "SHORT_FLAVOR_DESCRIPTION", "\"F\""
            buildConfigField "String", "FLAVOR_DESCRIPTION", "\"FDroid\""
        }
    }

    compileOptions {
        sourceCompatibility versions.sourceCompat
        targetCompatibility versions.targetCompat
    }

    kotlinOptions {
        jvmTarget = "11"
        freeCompilerArgs += [
                "-opt-in=kotlin.RequiresOptIn",
                // Fixes false positive "This is an internal Mavericks API. It is not intended for external use."
                // of MvRx `by viewModel()` calls. Maybe due to the inlining of code... This is a temporary fix...
                "-opt-in=com.airbnb.mvrx.InternalMavericksApi",
                // Opt in for kotlinx.coroutines.FlowPreview too
                "-opt-in=kotlinx.coroutines.FlowPreview",
                // Opt in for kotlinx.coroutines.ExperimentalCoroutinesApi too
                "-opt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
        ]
    }

    sourceSets {
        androidTest {
            java.srcDirs += "src/sharedTest/java"
        }
        test {
            java.srcDirs += "src/sharedTest/java"
        }
        // Add sourceSets for `release` version when building `nightly`
        nightly {
            java.srcDirs += "src/release/java"
        }
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    implementation project(":vector-config")
    api project(":matrix-sdk-android")
    implementation project(":matrix-sdk-android-flow")
    implementation project(":library:jsonviewer")
    implementation project(":library:ui-strings")
    implementation project(":library:ui-styles")
    implementation project(":library:core-utils")
    implementation project(":library:attachment-viewer")
    implementation project(":library:diff-match-patch")
    implementation project(":library:multipicker")

    implementation libs.jetbrains.coroutinesCore
    implementation libs.jetbrains.coroutinesAndroid

    implementation libs.androidx.recyclerview
    implementation libs.androidx.appCompat
    implementation libs.androidx.fragmentKtx
    implementation libs.androidx.constraintLayout
    implementation libs.androidx.core
    implementation "androidx.media:media:1.6.0"
    implementation "androidx.transition:transition:1.4.1"
    implementation libs.androidx.biometric

    api "org.threeten:threetenbp:1.4.0:no-tzdb"
    api "com.gabrielittner.threetenbp:lazythreetenbp:0.11.0"

    implementation libs.squareup.moshi
    kapt libs.squareup.moshiKotlin

    // Lifecycle
    implementation libs.androidx.lifecycleLivedata
    api libs.androidx.lifecycleProcess
    implementation libs.androidx.lifecycleRuntimeKtx

    api libs.androidx.datastorepreferences

    // Opus Encoder
    implementation libs.element.opusencoder

    // Log
    api libs.jakewharton.timber

    // Debug
    api 'com.facebook.stetho:stetho:1.6.0'

    api libs.google.phonenumber

    // FlowBinding
    implementation libs.github.flowBinding
    implementation libs.github.flowBindingAppcompat

    api libs.airbnb.epoxy
    implementation libs.airbnb.epoxyGlide
    kapt libs.airbnb.epoxyProcessor
    implementation libs.airbnb.epoxyPaging
    api libs.airbnb.mavericks

    // Snap Helper https://github.com/rubensousa/GravitySnapHelper
    api 'com.github.rubensousa:gravitysnaphelper:2.2.2'

    // Nightly
    // API-only library
    gplayImplementation libs.google.appdistributionApi
    // Full SDK implementation
    gplayImplementation libs.google.appdistribution

    // Work
    api libs.androidx.work

    // Paging
    implementation libs.androidx.pagingRuntimeKtx

    // Functional Programming
    implementation libs.arrow.core

    // Pref
    api libs.androidx.preferenceKtx

    // UI
    implementation 'com.amulyakhare:com.amulyakhare.textdrawable:1.0.1'
    implementation libs.google.material
    implementation 'me.gujun.android:span:1.7'
    implementation libs.markwon.core
    implementation libs.markwon.extLatex
    implementation libs.markwon.inlineParser
    implementation libs.markwon.html
    implementation 'com.googlecode.htmlcompressor:htmlcompressor:1.5.2'
    implementation 'me.saket:better-link-movement-method:2.2.0'
    implementation 'com.google.android.flexbox:flexbox:3.0.0'
    implementation libs.androidx.autoFill
    implementation 'jp.wasabeef:glide-transformations:4.3.0'
    implementation 'com.github.hyuwah:DraggableView:1.0.0'

    // Custom Tab
    implementation 'androidx.browser:browser:1.4.0'

    // Passphrase strength helper
    implementation 'com.nulab-inc:zxcvbn:1.7.0'

    // Alerter
    implementation 'com.github.tapadoo:alerter:7.2.4'

    implementation 'com.otaliastudios:autocomplete:1.1.0'

    // Shake detection
    implementation 'com.squareup:seismic:1.0.3'

    // Image Loading
    implementation libs.github.bigImageViewer
    implementation libs.github.glideImageLoader
    implementation libs.github.progressPieIndicator
    implementation libs.github.glideImageViewFactory

    // implementation 'com.github.MikeOrtiz:TouchImageView:3.0.2'
    implementation 'com.github.chrisbanes:PhotoView:2.3.0'

    implementation libs.github.glide
    kapt libs.github.glideCompiler
    implementation 'com.github.yalantis:ucrop:2.2.8'

    // Chat effects
    implementation 'nl.dionsegijn:konfetti-xml:2.0.2'

    implementation 'com.github.jetradarmobile:android-snowfall:1.2.1'
    // DI
    implementation libs.dagger.hilt
    kapt libs.dagger.hiltCompiler

    // Analytics
    implementation 'com.posthog.android:posthog:1.1.2'

    // UnifiedPush
    implementation 'com.github.UnifiedPush:android-connector:2.0.1'
    // UnifiedPush gplay flavor only
    gplayImplementation('com.github.UnifiedPush:android-embedded_fcm_distributor:2.1.2') {
        exclude group: 'com.google.firebase', module: 'firebase-core'
        exclude group: 'com.google.firebase', module: 'firebase-analytics'
        exclude group: 'com.google.firebase', module: 'firebase-measurement-connector'
    }

    // OSS License, gplay flavor only
    gplayImplementation 'com.google.android.gms:play-services-oss-licenses:17.0.0'

    implementation "androidx.emoji2:emoji2:1.1.0"

    // WebRTC
    // org.webrtc:google-webrtc is for development purposes only
    // implementation 'org.webrtc:google-webrtc:1.0.+'
    implementation('com.facebook.react:react-native-webrtc:1.94.2-jitsi-10227332@aar')

    // Jitsi
    api('org.jitsi.react:jitsi-meet-sdk:5.0.2') {
        exclude group: 'com.google.firebase'
        exclude group: 'com.google.android.gms'
        exclude group: 'com.android.installreferrer'
    }

    // QR-code
    // Stick to 3.3.3 because of https://github.com/zxing/zxing/issues/1170
    implementation 'com.google.zxing:core:3.3.3'
    implementation 'me.dm7.barcodescanner:zxing:1.9.13'

    // Emoji Keyboard
    api libs.vanniktech.emojiMaterial
    api libs.vanniktech.emojiGoogle

    implementation 'im.dlg:android-dialer:1.2.5'

    // JWT
    api libs.jsonwebtoken.jjwtApi
    runtimeOnly libs.jsonwebtoken.jjwtImpl
    runtimeOnly(libs.jsonwebtoken.jjwtOrgjson) {
        exclude group: 'org.json', module: 'json' //provided by Android natively
    }
    implementation 'commons-codec:commons-codec:1.15'

    // MapTiler
    fdroidApi(libs.maplibre.androidSdk) {
        exclude group: 'com.google.android.gms', module: 'play-services-location'
    }
    fdroidApi(libs.maplibre.pluginAnnotation) {
        exclude group: 'com.google.android.gms', module: 'play-services-location'
    }
    gplayApi libs.maplibre.androidSdk
    gplayApi libs.maplibre.pluginAnnotation

    // TESTS
    testImplementation libs.tests.junit
    testImplementation libs.tests.kluent
    testImplementation libs.mockk.mockk
    // Plant Timber tree for test
    testImplementation libs.tests.timberJunitRule
    testImplementation libs.airbnb.mavericksTesting
    testImplementation(libs.jetbrains.coroutinesTest) {
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }

    // Flipper, debug builds only
    debugImplementation(libs.flipper.flipper) {
        exclude group: 'com.facebook.fbjni', module: 'fbjni'
    }
    debugImplementation(libs.flipper.flipperNetworkPlugin) {
        exclude group: 'com.facebook.fbjni', module: 'fbjni'
    }
    debugImplementation 'com.facebook.soloader:soloader:0.10.4'
    debugImplementation "com.kgurgul.flipper:flipper-realm-android:2.2.0"

    // Activate when you want to check for leaks, from time to time.
    debugImplementation 'com.squareup.leakcanary:leakcanary-android:2.9.1'

    androidTestImplementation libs.androidx.testCore
    androidTestImplementation libs.androidx.testRunner
    androidTestImplementation libs.androidx.testRules
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espressoCore
    androidTestImplementation libs.androidx.espressoContrib
    androidTestImplementation libs.androidx.espressoIntents
    androidTestImplementation libs.tests.kluent
    androidTestImplementation libs.androidx.coreTesting
    androidTestImplementation(libs.jetbrains.coroutinesTest) {
        exclude group: "org.jetbrains.kotlinx", module: "kotlinx-coroutines-debug"
    }
    // Plant Timber tree for test
    androidTestImplementation libs.tests.timberJunitRule
    // "The one who serves a great Espresso"
    androidTestImplementation('com.adevinta.android:barista:4.2.0') {
        exclude group: 'org.jetbrains.kotlin'
    }
    androidTestImplementation libs.mockk.mockkAndroid
    androidTestUtil libs.androidx.orchestrator
    debugImplementation libs.androidx.fragmentTesting
    androidTestImplementation "org.jetbrains.kotlin:kotlin-reflect:1.7.10"
}
